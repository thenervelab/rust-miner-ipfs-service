name: CI

on:

  push:
    branches: [ "main" ]
    tags:
      - "v*"   # trigger on tags like v1.0.0, v2.3.1 etc.
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:


jobs:

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:

      - uses: actions/checkout@v5
        with:
          submodules: 'true'

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build 
        run: cargo build --release --verbose

      - name: Test
        run: cargo test --all --verbose

      - name: Upload Binary Artifact
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: rust-miner-ipfs-service-${{ matrix.os }}
          path: target/release/miner-ipfs-service

      - name: Upload Windows Binary Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: rust-miner-ipfs-service-windows
          path: target/release/miner-ipfs-service.exe
  
  coverage:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:

      - uses: actions/checkout@v5

      - name: Install llvm-tools
        run: rustup component add llvm-tools-preview

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Run tests with coverage
        run: cargo llvm-cov --workspace --all-features --html --output-dir coverage-html

      - name: Upload coverage as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage-html/

      - name: Upload coverage report to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: coverage-html/html

  deploy-coverage:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: coverage
    if: ${{ ! startsWith(github.ref, 'refs/tags/v') }}
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release:
    name: Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Rename binaries for clarity
        run: |
          mkdir release-assets
          cp artifacts/rust-miner-ipfs-service-ubuntu-latest/miner-ipfs-service release-assets/miner-ipfs-service-linux
          cp artifacts/rust-miner-ipfs-service-macos-latest/miner-ipfs-service release-assets/miner-ipfs-service-macos
          cp artifacts/rust-miner-ipfs-service-windows/miner-ipfs-service.exe release-assets/miner-ipfs-service-windows.exe

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}